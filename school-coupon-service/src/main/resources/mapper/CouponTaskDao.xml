<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itlin.coupon.dao.CouponTaskDao">

    <resultMap type="com.itlin.coupon.entity.CouponTask" id="CouponTaskMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="couponRecordId" column="coupon_record_id" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="outTradeNo" column="out_trade_no" jdbcType="VARCHAR"/>
        <result property="lockState" column="lock_state" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="CouponTaskMap">
        select
          id, coupon_record_id, create_time, out_trade_no, lock_state
        from coupon_task
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="CouponTaskMap">
        select
          id, coupon_record_id, create_time, out_trade_no, lock_state
        from coupon_task
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="couponRecordId != null">
                and coupon_record_id = #{couponRecordId}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="outTradeNo != null and outTradeNo != ''">
                and out_trade_no = #{outTradeNo}
            </if>
            <if test="lockState != null and lockState != ''">
                and lock_state = #{lockState}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from coupon_task
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="couponRecordId != null">
                and coupon_record_id = #{couponRecordId}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="outTradeNo != null and outTradeNo != ''">
                and out_trade_no = #{outTradeNo}
            </if>
            <if test="lockState != null and lockState != ''">
                and lock_state = #{lockState}
            </if>
        </where>
    </select>
    <select id="queryByOutTranceId" resultType="com.itlin.coupon.entity.CouponTask">
        select * from coupon_task
        where out_trade_no=#{outTranceId}

    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        <selectKey keyProperty="id" resultType="long" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into coupon_task(coupon_record_id, create_time, out_trade_no, lock_state)
        values (#{couponRecordId}, #{createTime}, #{outTradeNo}, #{lockState})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into coupon_task(coupon_record_id, create_time, out_trade_no, lock_state)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.couponRecordId}, #{entity.createTime}, #{entity.outTradeNo}, #{entity.lockState})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into coupon_task(coupon_record_id, create_time, out_trade_no, lock_state)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.couponRecordId}, #{entity.createTime}, #{entity.outTradeNo}, #{entity.lockState})
        </foreach>
        on duplicate key update
        coupon_record_id = values(coupon_record_id),
        create_time = values(create_time),
        out_trade_no = values(out_trade_no),
        lock_state = values(lock_state)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update coupon_task
        <set>
            <if test="couponRecordId != null">
                coupon_record_id = #{couponRecordId},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="outTradeNo != null and outTradeNo != ''">
                out_trade_no = #{outTradeNo},
            </if>
            <if test="lockState != null and lockState != ''">
                lock_state = #{lockState},
            </if>
        </set>
        where id = #{id}
    </update>
    <update id="updateState">

        update coupon_task
        set lock_state=#{state}
        where id=#{taskId}
        and outTranceId=#{outTranceId}



    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from coupon_task where id = #{id}
    </delete>

</mapper>

